{"version":3,"file":"game.js","sourceRoot":"","sources":["src/game.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;;;;;;AAEH,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAC1D,OAAO,4BAA4B,CAAC;AACpC,OAAO,gCAAgC,CAAA;AAEvC;;;;;;GAMG;AAEH,IAAa,IAAI,GAAjB,MAAa,IAAK,SAAQ,UAAU;IAApC;;QAUE;;WAEG;QAEH,SAAI,GAAG,OAAO,CAAC;QAGf;;WAEG;QAEH,UAAK,GAAG,CAAC,CAAC;IAsBZ,CAAC;IApBU,MAAM;QACb,OAAO,IAAI,CAAA;;;;;uBAKQ,CAAC;IACtB,CAAC;IAED;;;OAGG;IACH,QAAQ,CAAC,IAAY;QACnB,OAAO,UAAU,IAAI,EAAE,CAAC;IAC1B,CAAC;IAEkB,gBAAgB;QACjC,OAAO,IAAI,CAAC;IACd,CAAC;CACF,CAAA;AA1CiB,WAAM,GAAG,GAAG,CAAA;;;;;;;GAO1B,CAAA;AAMF;IADC,QAAQ,EAAE;kCACI;AAOf;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;mCACf;AArBC,IAAI;IADhB,aAAa,CAAC,aAAa,CAAC;GAChB,IAAI,CA2ChB;SA3CY,IAAI","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {LitElement, html, css} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\nimport \"./components/header/header\";\nimport \"./components/content/grid/grid\"\n\n/**\n * An example element.\n *\n * @fires count-changed - Indicates when the count changes\n * @slot - This element has a slot\n * @csspart button - The button\n */\n@customElement('memory-game')\nexport class Game extends LitElement {\n  static override styles = css`\n    :host {\n      display: block;\n      border: solid 1px gray;\n      padding: 16px;\n      max-width: 800px;\n    }\n  `;\n\n  /**\n   * The name to say \"Hello\" to.\n   */\n  @property()\n  name = 'World';\n\n\n  /**\n   * The number of times the button has been clicked.\n   */\n  @property({type: Number})\n  count = 0;\n\n  override render() {\n    return html`<div class=\"container\">\n                  <memory-header></memory-header>\n                  <memory-grid>\n                  </memory-grid>\n                  \n                </div>`;\n  }\n\n  /**\n   * Formats a greeting\n   * @param name The name to say \"Hello\" to\n   */\n  sayHello(name: string): string {\n    return `Hello, ${name}`;\n  }\n\n  protected override createRenderRoot() {\n    return this;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'memory-game': Game;\n  }\n}\n"]}